{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","bossFacing","setBossFacing","bossCleaveSide","setBossCleaveSide","edgeClonePos","setEdgeClonePos","cornerClonePos","setCornerClonePos","attackTimeout","setAttackTimeout","zonesRevealed","setZonesRevealed","onReveal","reveal","onReset","window","clearTimeout","reset","className","onClick","cleaveSide","Math","random","rotationOffset","floor","edgeCloneSide","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAuHeA,MAlHf,WAA6B,IAAD,EACSC,mBAAiB,IAD1B,mBACpBC,EADoB,KACRC,EADQ,OAEiBF,mBAA4B,MAF7C,mBAEpBG,EAFoB,KAEJC,EAFI,OAGaJ,mBAAwB,MAHrC,mBAGpBK,EAHoB,KAGNC,EAHM,OAIiBN,mBAAwB,MAJzC,mBAIpBO,EAJoB,KAIJC,EAJI,OAKeR,mBAAwB,MALvC,mBAKpBS,EALoB,KAKLC,EALK,OAMeV,oBAAkB,GANjC,mBAMpBW,EANoB,KAMLC,EANK,KAkCrBC,EAAW,WAChBC,KAGKA,EAAS,WACdF,GAAiB,IAGZG,EAAU,WACXN,IACHO,OAAOC,aAAaR,GACpBS,MAIIA,EAAQ,WACbhB,EAAc,IACdE,EAAkB,MAClBE,EAAgB,MAChBE,EAAkB,MAClBI,GAAiB,IAGlB,OACC,sBAAKO,UAAU,kBAAf,UACC,sBAAKA,UAAU,QAAf,UACC,qBAAKC,QAAS,kBAAMP,KAAYM,UAAU,oBAA1C,eAGA,qBAAKC,QAAS,kBAAMP,KAAYM,UAAU,oBAA1C,eAGA,qBAAKC,QAAS,kBAAMP,KAAYM,UAAU,oBAA1C,eAGA,qBAAKC,QAAS,kBAAMP,KAAYM,UAAU,oBAA1C,eAGA,qBAAKC,QAAS,kBAAMP,KAAYM,UAAU,sBAA1C,eAGA,qBAAKC,QAAS,kBAAMP,KAAYM,UAAU,sBAA1C,eAGA,qBAAKC,QAAS,kBAAMP,KAAYM,UAAU,wBAA1C,eAGA,qBAAKC,QAAS,kBAAMP,KAAYM,UAAU,uBAA1C,eAGA,qBAAKC,QAAS,kBAAMP,KAAYM,UAAS,sBAAiBlB,GAA1D,SACC,qCACC,qBAAKkB,UAAU,eACdhB,GACA,qCACC,qBAAKgB,UAAS,kCAA6BhB,KAC1CQ,GAAiB,qBAAKQ,UAAS,yCAAoChB,aAKtD,OAAjBE,GACA,sBAAKc,UAAS,yBAAoBd,GAAlC,UACC,qBAAKc,UAAU,gBACdR,GAAiB,qBAAKQ,UAAS,yCAAoChB,QAGlD,OAAnBI,GACA,sBAAKY,UAAS,yBAAoBZ,GAAlC,UACC,qBAAKY,UAAU,gBACdR,GAAiB,qBAAKQ,UAAS,yCAAoChB,WAIvE,wBAAQiB,QApGS,WAClBL,IAEA,IAAMM,EAAyBC,KAAKC,SAAW,GAAM,OAAS,QAExDC,EAAiBF,KAAKG,MAAsB,EAAhBH,KAAKC,UACvCrB,EAA+B,GAAjBsB,GACdpB,EAAkBiB,GAElB,IAAMK,EAAgBJ,KAAKC,SAAW,GAAM,OAAS,QAC/ClB,EAAiC,SAAlBqB,EAA2B,GAAK,IAEjDnB,EAAiB,IACC,SAAlBmB,IACHnB,EAAiB,IAGde,KAAKC,SAAW,KACnBhB,GAAkB,KAEnBD,GAAiBD,EAAgC,GAAjBmB,GAAuB,KACvDhB,GAAmBD,EAAkC,GAAjBiB,GAAuB,KAE3Dd,EAAiBM,OAAOW,YAAW,kBAAMb,MAAU,OA6ElD,sBACA,wBAAQM,QAASL,EAAjB,uBCpGYa,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHXQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,K","file":"static/js/main.b34b35b2.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\n\ntype CleaveSide = 'left' | 'right'\n\nfunction App(): JSX.Element {\n\tconst [bossFacing, setBossFacing] = useState<number>(90)\n\tconst [bossCleaveSide, setBossCleaveSide] = useState<CleaveSide | null>(null)\n\tconst [edgeClonePos, setEdgeClonePos] = useState<number | null>(null)\n\tconst [cornerClonePos, setCornerClonePos] = useState<number | null>(null)\n\tconst [attackTimeout, setAttackTimeout] = useState<number | null>(null)\n\tconst [zonesRevealed, setZonesRevealed] = useState<boolean>(false)\n\n\tconst onSimulate = () => {\n\t\tonReset()\n\n\t\tconst cleaveSide: CleaveSide = Math.random() < 0.5 ? 'left' : 'right'\n\n\t\tconst rotationOffset = Math.floor(Math.random() * 8)\n\t\tsetBossFacing(rotationOffset * 45)\n\t\tsetBossCleaveSide(cleaveSide)\n\n\t\tconst edgeCloneSide = Math.random() < 0.5 ? 'left' : 'right'\n\t\tconst edgeClonePos = edgeCloneSide === 'left' ? 90 : 270\n\n\t\tlet cornerClonePos = 135\n\t\tif (edgeCloneSide === 'left') {\n\t\t\tcornerClonePos = 45\n\t\t}\n\n\t\tif (Math.random() < 0.5) {\n\t\t\tcornerClonePos += 180\n\t\t}\n\t\tsetEdgeClonePos((edgeClonePos + rotationOffset * 45) % 360)\n\t\tsetCornerClonePos((cornerClonePos + rotationOffset * 45) % 360)\n\n\t\tsetAttackTimeout(window.setTimeout(() => reveal(), 10000))\n\t}\n\n\tconst onReveal = () => {\n\t\treveal()\n\t}\n\n\tconst reveal = () => {\n\t\tsetZonesRevealed(true)\n\t}\n\n\tconst onReset = () => {\n\t\tif (attackTimeout) {\n\t\t\twindow.clearTimeout(attackTimeout)\n\t\t\treset()\n\t\t}\n\t}\n\n\tconst reset = () => {\n\t\tsetBossFacing(90)\n\t\tsetBossCleaveSide(null)\n\t\tsetEdgeClonePos(null)\n\t\tsetCornerClonePos(null)\n\t\tsetZonesRevealed(false)\n\t}\n\n\treturn (\n\t\t<div className=\"outer-container\">\n\t\t\t<div className=\"arena\">\n\t\t\t\t<div onClick={() => onReveal()} className=\"safe-marker pos-a\">\n\t\t\t\t\tA\n\t\t\t\t</div>\n\t\t\t\t<div onClick={() => onReveal()} className=\"safe-marker pos-b\">\n\t\t\t\t\tB\n\t\t\t\t</div>\n\t\t\t\t<div onClick={() => onReveal()} className=\"safe-marker pos-c\">\n\t\t\t\t\tC\n\t\t\t\t</div>\n\t\t\t\t<div onClick={() => onReveal()} className=\"safe-marker pos-d\">\n\t\t\t\t\tD\n\t\t\t\t</div>\n\t\t\t\t<div onClick={() => onReveal()} className=\"safe-marker pos-one\">\n\t\t\t\t\t1\n\t\t\t\t</div>\n\t\t\t\t<div onClick={() => onReveal()} className=\"safe-marker pos-two\">\n\t\t\t\t\t2\n\t\t\t\t</div>\n\t\t\t\t<div onClick={() => onReveal()} className=\"safe-marker pos-three\">\n\t\t\t\t\t3\n\t\t\t\t</div>\n\t\t\t\t<div onClick={() => onReveal()} className=\"safe-marker pos-four\">\n\t\t\t\t\t4\n\t\t\t\t</div>\n\t\t\t\t<div onClick={() => onReveal()} className={`boss facing-${bossFacing}`}>\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className=\"boss-image\" />\n\t\t\t\t\t\t{bossCleaveSide && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className={`boss-cleave boss-cleave-${bossCleaveSide}`} />\n\t\t\t\t\t\t\t\t{zonesRevealed && <div className={`boss-cleave-reveal boss-cleave-${bossCleaveSide}`} />}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t</div>\n\t\t\t\t{edgeClonePos !== null && (\n\t\t\t\t\t<div className={`clone position-${edgeClonePos}`}>\n\t\t\t\t\t\t<div className=\"clone-image\" />\n\t\t\t\t\t\t{zonesRevealed && <div className={`boss-cleave-reveal boss-cleave-${bossCleaveSide}`} />}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{cornerClonePos !== null && (\n\t\t\t\t\t<div className={`clone position-${cornerClonePos}`}>\n\t\t\t\t\t\t<div className=\"clone-image\" />\n\t\t\t\t\t\t{zonesRevealed && <div className={`boss-cleave-reveal boss-cleave-${bossCleaveSide}`} />}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<button onClick={onSimulate}>Simulate</button>\n\t\t\t<button onClick={onReset}>Reset</button>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}